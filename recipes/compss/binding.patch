--- /root/COMPSs/compss/programming_model/bindings/bindings-common/install_common
+++ ./compss/programming_model/bindings/bindings-common/install_common
@@ -59,7 +59,7 @@
   # Look for the JVM Library
   libjava=$(find "${JAVA_HOME}"/jre/lib/ -name libjvm.so | head -n 1)
   if [ -z "$libjava" ]; then
-    libjava=$(find "${JAVA_HOME}"/jre/lib/ -name libjvm.dylib | head -n 1)
+    libjava=$(find "${JAVA_HOME}"/lib/server -name libjvm.dylib | head -n 1)
     if [ -z "$libjava" ]; then
       echo "${JAVA_JRE_ERROR}"
       exit 1

--- /root/COMPSs/compss/programming_model/bindings/bindings-common/src/Makefile.am
+++ ./compss/programming_model/bindings/bindings-common/src/Makefile.am
@@ -19,7 +19,7 @@ include_HEADERS = BindingDataManager.h BindingExecutor.h JavaNioConnStreamBuffer
 lib_LTLIBRARIES = libbindings_common.la
 
 libbindings_common_la_SOURCES = BindingDataManager.cc BindingExecutor.cc JavaNioConnStreamBuffer.cc AbstractCache.cc compss_worker.cc common.cc GS_compss.cc
-libbindings_common_la_CPPFLAGS = -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux/ -I. -Wall
+libbindings_common_la_CPPFLAGS = -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux/ -I$(JAVA_HOME)/include/darwin -I. -Wall
 libbindings_common_la_LDFLAGS = -shared -L$(JAVA_LIB_DIR) -ljvm
 
 ACLOCAL_AMFLAGS =-I m4

--- /root/COMPSs/compss/programming_model/bindings/c/src/bindinglib/Makefile.am
+++ ./compss/programming_model/bindings/c/src/bindinglib/Makefile.am
@@ -21,2 +21,2 @@ libcbindings_la_SOURCES = CBindingExecutor.cc c_compss.cc c_compss_base64.c
-libcbindings_la_CPPFLAGS = -Wall -I../../../bindings-common/include -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux/ -I${BOOST_INCLUDE} ${BOOST_CPPFLAGS} $(DEFINE)
+libcbindings_la_CPPFLAGS = -Wall -I../../../bindings-common/include -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux/ -I$(JAVA_HOME)/include/darwin -I${BOOST_INCLUDE} ${BOOST_CPPFLAGS} $(DEFINE)

--- /root/COMPSs/compss/programming_model/bindings/c/src/bindinglib/CBindingExecutor.cc
+++ ./compss/programming_model/bindings/c/src/bindinglib/CBindingExecutor.cc
@@ -49,15 +49,15 @@ if (commandArgs[i] == "taskset") {
-              cpu_set_t to_assign;
+             /*cpu_set_t to_assign;
              CPU_ZERO(&to_assign);
              string assignedCpuString = commandArgs[i+2];
              vector<int>assignedCpus;
              stringstream ss_cpus(assignedCpuString);
              int cpu;
              //Read integers from the list of cpus assigned, ignore commas
              while (ss_cpus >> cpu) {
                  CPU_SET(cpu, &to_assign);
                  if (ss_cpus.peek() == ',') ss_cpus.ignore();
              }
              if(sched_setaffinity(gettid(), sizeof(cpu_set_t), &to_assign) < 0) {
                  cout << "[Persistent C(Th " << gettid() <<")] WARN: Error during sched_setaffinity call! Ignoring affinity." << endl << flush;
-              }
+ }*/
          }


